const { Telegraf } = require('telegraf');
const fs = require('fs');

// –ó–∞–≥—Ä—É–∂–∞–µ–º –≤–∏–∫—Ç–æ—Ä–∏–Ω—ã –∏–∑ JSON
const quizzes = JSON.parse(fs.readFileSync('quizzes.json', 'utf-8'));

// –°–æ–∑–¥–∞–µ–º –±–æ—Ç
const bot = new Telegraf('YOUR_BOT_TOKEN_HERE');

// –ö–æ–º–∞–Ω–¥–∞ /start
bot.start((ctx) => {
  ctx.reply('–ü—Ä–∏–≤–µ—Ç! –Ø QuizMasterBot. –í—ã–±–µ—Ä–∏ —Ç–µ–º—É –≤–∏–∫—Ç–æ—Ä–∏–Ω—ã:', {
    reply_markup: {
      inline_keyboard: Object.keys(quizzes).map((theme) => [
        { text: theme, callback_data: `theme:${theme}` }
      ])
    }
  });
});

// –û–±—Ä–∞–±–æ—Ç–∫–∞ –≤—ã–±–æ—Ä–∞ —Ç–µ–º—ã
bot.on('callback_query', (ctx) => {
  const [type, theme] = ctx.callbackQuery.data.split(':');
  if (type === 'theme' && quizzes[theme]) {
    ctx.session = { theme, questionIndex: 0, score: 0 }; // –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º —Å–µ—Å—Å–∏—é
    return sendQuestion(ctx);
  }
  ctx.answerCbQuery('–ù–µ–≤–µ—Ä–Ω—ã–π –≤—ã–±–æ—Ä!');
});

// –û—Ç–ø—Ä–∞–≤–∫–∞ –≤–æ–ø—Ä–æ—Å–∞
function sendQuestion(ctx) {
  const session = ctx.session;
  const quiz = quizzes[session.theme];
  if (session.questionIndex < quiz.length) {
    const question = quiz[session.questionIndex];
    return ctx.reply(question.question, {
      reply_markup: {
        inline_keyboard: question.options.map((opt, idx) => [
          { text: opt, callback_data: `answer:${idx}` }
        ])
      }
    });
  }
  // –ó–∞–≤–µ—Ä—à–µ–Ω–∏–µ –≤–∏–∫—Ç–æ—Ä–∏–Ω—ã
  ctx.reply(`–í–∏–∫—Ç–æ—Ä–∏–Ω–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞! –¢—ã –Ω–∞–±—Ä–∞–ª ${session.score} –æ—á–∫–æ–≤.`);
}

// –û–±—Ä–∞–±–æ—Ç–∫–∞ –æ—Ç–≤–µ—Ç–∞
bot.on('callback_query', (ctx) => {
  const [type, answer] = ctx.callbackQuery.data.split(':');
  if (type === 'answer') {
    const session = ctx.session;
    const quiz = quizzes[session.theme];
    const question = quiz[session.questionIndex];
    if (parseInt(answer) === question.answer) {
      session.score++;
      ctx.answerCbQuery('–í–µ—Ä–Ω–æ!');
    } else {
      ctx.answerCbQuery('–ù–µ–≤–µ—Ä–Ω–æ!');
    }
    session.questionIndex++;
    return sendQuestion(ctx);
  }
});

// –ó–∞–ø—É—Å–∫ –±–æ—Ç–∞
bot.launch().then(() => console.log('–ë–æ—Ç –∑–∞–ø—É—â–µ–Ω! üöÄ'));

// –û–±—Ä–∞–±–æ—Ç–∫–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è
process.once('SIGINT', () => bot.stop('SIGINT'));
process.once('SIGTERM', () => bot.stop('SIGTERM'));